{"version":3,"sources":["webpack:///webpack/bootstrap 7c0855c177f8d64eca11","webpack:///./src/main.ts"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;ACpCA;;SACE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;SAChB,IAAI,CAAC;aACJ,MAAM,GAAG,GAAG,MAAM,OAAO,EAAE;SAC5B,CAAE;SAAA,KAAK,EAAC,CAAC,CAAC,CAAC,CAAC;aACV,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;SAChB,CAAC;SACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;KAClB,CAAC;EAAA;AAED;KACE,MAAM,CAAC,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM;SACjC,UAAU,CAAC,MAAM,MAAM,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC;KACtC,CAAC,CAAC;AACJ,EAAC;AAED,KAAI,EAAE","file":"/Users/36781/Desktop/PerfectReader/dist/index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 7c0855c177f8d64eca11\n **/","declare function setTimeout(callback: () => void, timeout: number): void\n\nasync function Test() {\n  console.log('1')\n  try {\n   const val = await asyncFn()\n  } catch(e) {\n    console.log(e)\n  }\n  console.log(val)\n}\n\nfunction asyncFn() {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => reject(false), 100)\n  })\n}\n\nTest()\n\n\n/** WEBPACK FOOTER **\n ** ./src/main.ts\n **/"],"sourceRoot":""}